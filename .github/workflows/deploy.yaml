name: Yolo Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REPO_URL: ${{ github.server_url }}/${{ github.repository }}.git
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure SSH for Testing
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/private_key
          chmod 600 ~/.ssh/private_key
          cat > ~/.ssh/config << EOF
          Host ec2
              HostName $EC2_HOST
              User $EC2_USERNAME
              IdentityFile ~/.ssh/private_key
              StrictHostKeyChecking no
          EOF

      - name: Clean Untracked Files and Setup Environment on EC2
        run: |
          ssh ec2 "cd $REPO_NAME && git reset --hard && git clean -fd && bash deploy.sh"

      - name: Run Tests on EC2
        run: |
          ssh ec2 "cd $REPO_NAME && source .venv/bin/activate && pip list && python -m unittest discover -s tests -v"

  Deploy:
    needs: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "Host ec2
                HostName $EC2_HOST
                User $EC2_USERNAME
                IdentityFile ~/.ssh/id_rsa
                StrictHostKeyChecking no" > ~/.ssh/config

      - name: Clone or Pull Repo on EC2
        run: |
          ssh ec2 "if [ -d ~/${REPO_NAME} ]; then cd ~/${REPO_NAME} && git pull origin main; else git clone ${REPO_URL} ~/${REPO_NAME}; fi"

      - name: Copy service file and deploy script to EC2
        run: |
          scp yolo.service ec2:~/yolo.service
          scp deploy.sh ec2:~/deploy.sh
          ssh ec2 "chmod +x ~/deploy.sh"

      - name: Run deployment script on EC2
        run: |
          ssh ec2 "~/deploy.sh"
