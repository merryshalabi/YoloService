name: YOLO Test and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      REPO_NAME: YoloService

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $EC2_HOST >> ~/.ssh/known_hosts

      - name: Clone or Pull Repo on EC2
        run: |
          ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_HOST }} '
            if [ ! -d "$REPO_NAME" ]; then
              git clone https://github.com/${{ github.repository }}.git $REPO_NAME
            else
              cd $REPO_NAME && git reset --hard && git clean -fd && git pull
            fi
          '

      - name: Copy setup and service files to EC2
        run: |
          scp -i ~/.ssh/id_rsa setup.sh deploy.sh yolo.service ubuntu@${{ secrets.EC2_HOST }}:~/YoloService/

      - name: Run setup and tests on EC2
        run: |
          ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_HOST }} '
            cd YoloService
            chmod +x setup.sh
            ./setup.sh
            source .venv/bin/activate
            python3 -m unittest discover -s tests -v
          '

  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $EC2_HOST >> ~/.ssh/known_hosts

      - name: Run Deployment on EC2
        run: |
          ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_HOST }} '
            cd YoloService
            chmod +x deploy.sh
            ./deploy.sh
          '
